#include <iostream>

#include "algorithms/svd_computation.h"
#include "types/matrix.h"

using namespace svd_computation;

int main() {
    Matrix<long double> A = {{-47534.4, 70287.9, 59747.4, -59106.6, 39437.7, 0., 0., 0., 0., 0.},
                             {0., -47534.4, 70287.9, 59747.4, -59106.6, 39437.7, 0., 0., 0., 0.},
                             {0., 0., -47534.4, 70287.9, 59747.4, -59106.6, 39437.7, 0., 0., 0.},
                             {0., 0., 0., -47534.4, 70287.9, 59747.4, -59106.6, 39437.7, 0., 0.},
                             {0., 0., 0., 0., -47534.4, 70287.9, 59747.4, -59106.6, 39437.7, 0.},
                             {0., 0., 0., 0., 0., -47534.4, 70287.9, 59747.4, -59106.6, 39437.7},
                             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
    auto ans = compute_svd<long double>(A, nullptr, nullptr, 1e-8);
    for (auto x : ans) {
        std::cout << x << std::endl;
    }
}
